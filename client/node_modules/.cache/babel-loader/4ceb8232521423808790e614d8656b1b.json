{"ast":null,"code":"// import React, { Component } from \"react\";\n// import DeleteBtn from \"../components/DeleteBtn\";\n// import Jumbotron from \"../components/Jumbotron\";\n// import API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\n// import { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\n// class Books extends Component {\n//   state = {\n//     books: [],\n//     title: \"\",\n//     author: \"\",\n//     synopsis: \"\"\n//   };\n//   componentDidMount() {\n//     this.loadBooks();\n//   }\n//   loadBooks = () => {\n//     API.getBooks()\n//       .then(res =>\n//         this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" })\n//       )\n//       .catch(err => console.log(err));\n//   };\n//   deleteBook = id => {\n//     API.deleteBook(id)\n//       .then(res => this.loadBooks())\n//       .catch(err => console.log(err));\n//   };\n//   handleInputChange = event => {\n//     const { name, value } = event.target;\n//     this.setState({\n//       [name]: value\n//     });\n//   };\n//   handleFormSubmit = event => {\n//     event.preventDefault();\n//     if (this.state.title && this.state.author) {\n//       API.saveBook({\n//         title: this.state.title,\n//         author: this.state.author,\n//         synopsis: this.state.synopsis\n//       })\n//         .then(res => this.loadBooks())\n//         .catch(err => console.log(err));\n//     }\n//   };\n//   render() {\n//     return (\n//       <Container fluid>\n//         <Row>\n//           <Col size=\"md-6\">\n//             <Jumbotron>\n//               <h1>What Books Should I Read?</h1>\n//             </Jumbotron>\n//             <form>\n//               <Input\n//                 value={this.state.title}\n//                 onChange={this.handleInputChange}\n//                 name=\"title\"\n//                 placeholder=\"Title (required)\"\n//               />\n//               <Input\n//                 value={this.state.author}\n//                 onChange={this.handleInputChange}\n//                 name=\"author\"\n//                 placeholder=\"Author (required)\"\n//               />\n//               <TextArea\n//                 value={this.state.synopsis}\n//                 onChange={this.handleInputChange}\n//                 name=\"synopsis\"\n//                 placeholder=\"Synopsis (Optional)\"\n//               />\n//               <FormBtn\n//                 disabled={!(this.state.author && this.state.title)}\n//                 onClick={this.handleFormSubmit}\n//               >\n//                 Submit Book\n//               </FormBtn>\n//             </form>\n//           </Col>\n//           <Col size=\"md-6 sm-12\">\n//             <Jumbotron>\n//               <h1>Books On My List</h1>\n//             </Jumbotron>\n//             {this.state.books.length ? (\n//               <List>\n//                 {this.state.books.map(book => (\n//                   <ListItem key={book._id}>\n//                     <Link to={\"/books/\" + book._id}>\n//                       <strong>\n//                         {book.title} by {book.author}\n//                       </strong>\n//                     </Link>\n//                     <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n//                   </ListItem>\n//                 ))}\n//               </List>\n//             ) : (\n//               <h3>No Results to Display</h3>\n//             )}\n//           </Col>\n//         </Row>\n//       </Container>\n//     );\n//   }\n// }\n// export default Books;","map":{"version":3,"sources":["/Users/amyhaerr/Desktop/Bootcamp/Project-3/esl-project/client/src/pages/Books.js"],"names":[],"mappingssourcesContent":["// import React, { Component } from \"react\";\n// import DeleteBtn from \"../components/DeleteBtn\";\n// import Jumbotron from \"../components/Jumbotron\";\n// import API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\n// import { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\n\n// class Books extends Component {\n//   state = {\n//     books: [],\n//     title: \"\",\n//     author: \"\",\n//     synopsis: \"\"\n//   };\n\n//   componentDidMount() {\n//     this.loadBooks();\n//   }\n\n//   loadBooks = () => {\n//     API.getBooks()\n//       .then(res =>\n//         this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" })\n//       )\n//       .catch(err => console.log(err));\n//   };\n\n//   deleteBook = id => {\n//     API.deleteBook(id)\n//       .then(res => this.loadBooks())\n//       .catch(err => console.log(err));\n//   };\n\n//   handleInputChange = event => {\n//     const { name, value } = event.target;\n//     this.setState({\n//       [name]: value\n//     });\n//   };\n\n//   handleFormSubmit = event => {\n//     event.preventDefault();\n//     if (this.state.title && this.state.author) {\n//       API.saveBook({\n//         title: this.state.title,\n//         author: this.state.author,\n//         synopsis: this.state.synopsis\n//       })\n//         .then(res => this.loadBooks())\n//         .catch(err => console.log(err));\n//     }\n//   };\n\n//   render() {\n//     return (\n//       <Container fluid>\n//         <Row>\n//           <Col size=\"md-6\">\n//             <Jumbotron>\n//               <h1>What Books Should I Read?</h1>\n//             </Jumbotron>\n//             <form>\n//               <Input\n//                 value={this.state.title}\n//                 onChange={this.handleInputChange}\n//                 name=\"title\"\n//                 placeholder=\"Title (required)\"\n//               />\n//               <Input\n//                 value={this.state.author}\n//                 onChange={this.handleInputChange}\n//                 name=\"author\"\n//                 placeholder=\"Author (required)\"\n//               />\n//               <TextArea\n//                 value={this.state.synopsis}\n//                 onChange={this.handleInputChange}\n//                 name=\"synopsis\"\n//                 placeholder=\"Synopsis (Optional)\"\n//               />\n//               <FormBtn\n//                 disabled={!(this.state.author && this.state.title)}\n//                 onClick={this.handleFormSubmit}\n//               >\n//                 Submit Book\n//               </FormBtn>\n//             </form>\n//           </Col>\n//           <Col size=\"md-6 sm-12\">\n//             <Jumbotron>\n//               <h1>Books On My List</h1>\n//             </Jumbotron>\n//             {this.state.books.length ? (\n//               <List>\n//                 {this.state.books.map(book => (\n//                   <ListItem key={book._id}>\n//                     <Link to={\"/books/\" + book._id}>\n//                       <strong>\n//                         {book.title} by {book.author}\n//                       </strong>\n//                     </Link>\n//                     <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n//                   </ListItem>\n//                 ))}\n//               </List>\n//             ) : (\n//               <h3>No Results to Display</h3>\n//             )}\n//           </Col>\n//         </Row>\n//       </Container>\n//     );\n//   }\n// }\n\n// export default Books;\n"]},"metadata":{},"sourceType":"module"}