{"ast":null,"code":"import _slicedToArray from \"/Users/amyhaerr/Desktop/Bootcamp/Project-3/esl-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/amyhaerr/Desktop/Bootcamp/Project-3/esl-project/client/src/components/Progressbar/ProgressBar.js\";\n\nimport React, { useEffect, useState } from \"react\"; // import { render } from \"react-dom\";\n// import { CircularProgressbar, CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\n\nimport \"./styles.css\";\n\nvar ProgressBar = function ProgressBar(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      offset = _useState2[0],\n      setOffset = _useState2[1];\n\n  var size = props.size,\n      progress = props.progress,\n      strokeWidth = props.strokeWidth,\n      circleOneStroke = props.circleOneStroke,\n      circleTwoStroke = props.circleTwoStroke;\n  var center = size / 2;\n  var radius = size / 2 - strokeWidth / 2;\n  var circumference = 2 * Math.PI * radius;\n  useEffect(function () {\n    var progressOffset = (100 - progress) / 100 * circumference;\n    setOffset(progressOffset);\n  }, [setOffset, progress, circumference, offset]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"circular-chart\",\n    width: size,\n    height: size,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"circular-bg\",\n    stroke: circleOneStroke,\n    cx: center,\n    cy: center,\n    r: radius,\n    strokeWidth: strokeWidth,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"circle\",\n    stroke: circleTwoStroke,\n    cx: center,\n    cy: center,\n    r: radius,\n    strokeWidth: strokeWidth,\n    strokeDasharray: circumference,\n    strokeDashoffset: offset,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    x: center,\n    y: center,\n    className: \"percentage\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, progress, \"%\")));\n};\n\nexport default ProgressBar;","map":{"version":3,"sources":["/Users/amyhaerr/Desktop/Bootcamp/Project-3/esl-project/client/src/components/Progressbar/ProgressBar.js"],"names":["React","useEffect","useState","ProgressBar","props","offset","setOffset","size","progress","strokeWidth","circleOneStroke","circleTwoStroke","center","radius","circumference","Math","PI","progressOffset"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;AACA;;AACA,OAAO,cAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAAA,kBACGF,QAAQ,CAAC,CAAD,CADX;AAAA;AAAA,MAClBG,MADkB;AAAA,MACVC,SADU;;AAAA,MAGrBC,IAHqB,GAQrBH,KARqB,CAGrBG,IAHqB;AAAA,MAIrBC,QAJqB,GAQrBJ,KARqB,CAIrBI,QAJqB;AAAA,MAKrBC,WALqB,GAQrBL,KARqB,CAKrBK,WALqB;AAAA,MAMrBC,eANqB,GAQrBN,KARqB,CAMrBM,eANqB;AAAA,MAOrBC,eAPqB,GAQrBP,KARqB,CAOrBO,eAPqB;AAUzB,MAAMC,MAAM,GAAGL,IAAI,GAAG,CAAtB;AACA,MAAMM,MAAM,GAAGN,IAAI,GAAG,CAAP,GAAWE,WAAW,GAAG,CAAxC;AACA,MAAMK,aAAa,GAAG,IAAIC,IAAI,CAACC,EAAT,GAAcH,MAApC;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMgB,cAAc,GAAI,CAAC,MAAMT,QAAP,IAAmB,GAApB,GAA2BM,aAAlD;AACAR,IAAAA,SAAS,CAACW,cAAD,CAAT;AACH,GAHQ,EAGN,CAACX,SAAD,EAAYE,QAAZ,EAAsBM,aAAtB,EAAqCT,MAArC,CAHM,CAAT;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,SAAS,EAAC,gBADV;AAEA,IAAA,KAAK,EAAIE,IAFT;AAGA,IAAA,MAAM,EAAIA,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AACI,IAAA,SAAS,EAAG,aADhB;AAEI,IAAA,MAAM,EAAIG,eAFd;AAGI,IAAA,EAAE,EAAIE,MAHV;AAII,IAAA,EAAE,EAAIA,MAJV;AAKI,IAAA,CAAC,EAAIC,MALT;AAMI,IAAA,WAAW,EAAIJ,WANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAaI;AACI,IAAA,SAAS,EAAC,QADd;AAEI,IAAA,MAAM,EAAIE,eAFd;AAGI,IAAA,EAAE,EAAIC,MAHV;AAII,IAAA,EAAE,EAAIA,MAJV;AAKI,IAAA,CAAC,EAAIC,MALT;AAMI,IAAA,WAAW,EAAIJ,WANnB;AAOI,IAAA,eAAe,EAAIK,aAPvB;AAQI,IAAA,gBAAgB,EAAIT,MARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,eAwBI;AACI,IAAA,CAAC,EAAIO,MADT;AAEI,IAAA,CAAC,EAAIA,MAFT;AAGI,IAAA,SAAS,EAAG,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKJ,QANL,MAxBJ,CADJ,CADJ;AAsCH,CAzDD;;AA2DA,eAAeL,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import { render } from \"react-dom\";\n// import { CircularProgressbar, CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\nimport \"./styles.css\";\n\nconst ProgressBar = props => {\n    const [offset, setOffset] = useState(0);\n    const {\n        size,\n        progress,\n        strokeWidth,\n        circleOneStroke,\n        circleTwoStroke\n    } = props;\n\n    const center = size / 2;\n    const radius = size / 2 - strokeWidth / 2;\n    const circumference = 2 * Math.PI * radius;\n\n    useEffect(() => {\n        const progressOffset = ((100 - progress) / 100) * circumference;\n        setOffset(progressOffset);\n    }, [setOffset, progress, circumference, offset]);\n\n    return (\n        <div>\n            <svg\n            className=\"circular-chart\"\n            width = {size}\n            height = {size}\n            >\n                <circle\n                    className = \"circular-bg\"\n                    stroke = {circleOneStroke}\n                    cx = {center}\n                    cy = {center}\n                    r = {radius}\n                    strokeWidth = {strokeWidth}\n                ></circle>\n                <circle\n                    className=\"circle\"\n                    stroke = {circleTwoStroke}\n                    cx = {center}\n                    cy = {center}\n                    r = {radius}\n                    strokeWidth = {strokeWidth}\n                    strokeDasharray = {circumference}\n                    strokeDashoffset = {offset}\n                \n                ></circle>\n                <text\n                    x = {center}\n                    y = {center}\n                    className = \"percentage\"\n                \n                >\n                    {progress}%\n                </text>\n            </svg>\n        </div>\n    )\n\n}\n\nexport default ProgressBar;\n\n\n"]},"metadata":{},"sourceType":"module"}